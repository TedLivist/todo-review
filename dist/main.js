(()=>{"use strict";var r={443:(r,n,e)=>{e.d(n,{Z:()=>A});var t=e(15),o=e.n(t),a=e(645),i=e.n(a)()(o());i.push([r.id,"* {\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n\r\nbody {\r\n  font-family: Verdana, Geneva, Tahoma, sans-serif;\r\n  overflow-y: hidden;\r\n}\r\n\r\n/* Form section */\r\n.form-section {\r\n  height: 100vh;\r\n  width: 60%;\r\n  margin: 0 auto;\r\n}\r\n\r\n/* Form */\r\n.form-control {\r\n  margin: 2rem auto 0;\r\n  width: 80%;\r\n  height: auto;\r\n  display: flex;\r\n  flex-direction: column;\r\n  background-color: #fff;\r\n  border-radius: 5px;\r\n  box-shadow: 2px 2px 5px rgba(150, 145, 145, 0.342);\r\n}\r\n\r\n.header-wrap {\r\n  border-bottom: 1px solid #ddd;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  width: 100%;\r\n}\r\n\r\n.heading {\r\n  padding: 1rem 0.5rem;\r\n  padding: 1rem;\r\n}\r\n\r\n/* Form input */\r\n.form-input {\r\n  padding: 1rem;\r\n  display: flex;\r\n  column-gap: 1rem;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  border-bottom: 1px solid #ddd;\r\n  padding-bottom: 0.5rem;\r\n}\r\n\r\n.add {\r\n  border: none;\r\n  background-color: inherit;\r\n  outline: none;\r\n  font-size: 20px;\r\n  cursor: pointer;\r\n}\r\n\r\n.syc {\r\n  padding: 1rem;\r\n}\r\n\r\n.syc:hover {\r\n  color: orange;\r\n  cursor: pointer;\r\n}\r\n\r\n.add:hover {\r\n  color: orange;\r\n}\r\n\r\n/* checkbox */\r\n.container {\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.list {\r\n  padding: 1rem;\r\n  display: flex;\r\n  column-gap: 1rem;\r\n  align-items: center;\r\n  border-bottom: 1px solid #ddd;\r\n  padding-bottom: 0.5rem;\r\n}\r\n\r\n.dot {\r\n  cursor: move;\r\n}\r\n\r\n.check {\r\n  width: 20px;\r\n  height: 20px;\r\n  cursor: pointer;\r\n  background-color: orange;\r\n}\r\n\r\n.label {\r\n  width: 100%;\r\n}\r\n\r\n.italics {\r\n  border: none;\r\n  background-color: inherit;\r\n}\r\n\r\n.italics:focus {\r\n  outline: none;\r\n  border: none;\r\n  background-color: inherit;\r\n}\r\n\r\n.italics:placeholder-shown {\r\n  font-style: italic;\r\n  font-size: 20px;\r\n}\r\n\r\n.strike {\r\n  text-decoration: line-through;\r\n}\r\n\r\n/* clear */\r\n.clear {\r\n  padding: 1rem;\r\n  align-items: center;\r\n  text-align: center;\r\n  text-decoration: none;\r\n  background-color: #f4f4f4;\r\n}\r\n\r\n.clear a {\r\n  color: #666;\r\n  text-decoration: none;\r\n}\r\n\r\n.clear a:hover {\r\n  text-decoration: underline;\r\n}\r\n","",{version:3,sources:["webpack://./src/assets/stylesheet/style.css"],names:[],mappings:"AAAA;EACE,SAAS;EACT,UAAU;AACZ;;AAEA;EACE,gDAAgD;EAChD,kBAAkB;AACpB;;AAEA,iBAAiB;AACjB;EACE,aAAa;EACb,UAAU;EACV,cAAc;AAChB;;AAEA,SAAS;AACT;EACE,mBAAmB;EACnB,UAAU;EACV,YAAY;EACZ,aAAa;EACb,sBAAsB;EACtB,sBAAsB;EACtB,kBAAkB;EAClB,kDAAkD;AACpD;;AAEA;EACE,6BAA6B;EAC7B,aAAa;EACb,mBAAmB;EACnB,mBAAmB;EACnB,8BAA8B;EAC9B,WAAW;AACb;;AAEA;EACE,oBAAoB;EACpB,aAAa;AACf;;AAEA,eAAe;AACf;EACE,aAAa;EACb,aAAa;EACb,gBAAgB;EAChB,mBAAmB;EACnB,8BAA8B;EAC9B,6BAA6B;EAC7B,sBAAsB;AACxB;;AAEA;EACE,YAAY;EACZ,yBAAyB;EACzB,aAAa;EACb,eAAe;EACf,eAAe;AACjB;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,aAAa;EACb,eAAe;AACjB;;AAEA;EACE,aAAa;AACf;;AAEA,aAAa;AACb;EACE,aAAa;EACb,sBAAsB;AACxB;;AAEA;EACE,aAAa;EACb,aAAa;EACb,gBAAgB;EAChB,mBAAmB;EACnB,6BAA6B;EAC7B,sBAAsB;AACxB;;AAEA;EACE,YAAY;AACd;;AAEA;EACE,WAAW;EACX,YAAY;EACZ,eAAe;EACf,wBAAwB;AAC1B;;AAEA;EACE,WAAW;AACb;;AAEA;EACE,YAAY;EACZ,yBAAyB;AAC3B;;AAEA;EACE,aAAa;EACb,YAAY;EACZ,yBAAyB;AAC3B;;AAEA;EACE,kBAAkB;EAClB,eAAe;AACjB;;AAEA;EACE,6BAA6B;AAC/B;;AAEA,UAAU;AACV;EACE,aAAa;EACb,mBAAmB;EACnB,kBAAkB;EAClB,qBAAqB;EACrB,yBAAyB;AAC3B;;AAEA;EACE,WAAW;EACX,qBAAqB;AACvB;;AAEA;EACE,0BAA0B;AAC5B",sourcesContent:["* {\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n\r\nbody {\r\n  font-family: Verdana, Geneva, Tahoma, sans-serif;\r\n  overflow-y: hidden;\r\n}\r\n\r\n/* Form section */\r\n.form-section {\r\n  height: 100vh;\r\n  width: 60%;\r\n  margin: 0 auto;\r\n}\r\n\r\n/* Form */\r\n.form-control {\r\n  margin: 2rem auto 0;\r\n  width: 80%;\r\n  height: auto;\r\n  display: flex;\r\n  flex-direction: column;\r\n  background-color: #fff;\r\n  border-radius: 5px;\r\n  box-shadow: 2px 2px 5px rgba(150, 145, 145, 0.342);\r\n}\r\n\r\n.header-wrap {\r\n  border-bottom: 1px solid #ddd;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  width: 100%;\r\n}\r\n\r\n.heading {\r\n  padding: 1rem 0.5rem;\r\n  padding: 1rem;\r\n}\r\n\r\n/* Form input */\r\n.form-input {\r\n  padding: 1rem;\r\n  display: flex;\r\n  column-gap: 1rem;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  border-bottom: 1px solid #ddd;\r\n  padding-bottom: 0.5rem;\r\n}\r\n\r\n.add {\r\n  border: none;\r\n  background-color: inherit;\r\n  outline: none;\r\n  font-size: 20px;\r\n  cursor: pointer;\r\n}\r\n\r\n.syc {\r\n  padding: 1rem;\r\n}\r\n\r\n.syc:hover {\r\n  color: orange;\r\n  cursor: pointer;\r\n}\r\n\r\n.add:hover {\r\n  color: orange;\r\n}\r\n\r\n/* checkbox */\r\n.container {\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.list {\r\n  padding: 1rem;\r\n  display: flex;\r\n  column-gap: 1rem;\r\n  align-items: center;\r\n  border-bottom: 1px solid #ddd;\r\n  padding-bottom: 0.5rem;\r\n}\r\n\r\n.dot {\r\n  cursor: move;\r\n}\r\n\r\n.check {\r\n  width: 20px;\r\n  height: 20px;\r\n  cursor: pointer;\r\n  background-color: orange;\r\n}\r\n\r\n.label {\r\n  width: 100%;\r\n}\r\n\r\n.italics {\r\n  border: none;\r\n  background-color: inherit;\r\n}\r\n\r\n.italics:focus {\r\n  outline: none;\r\n  border: none;\r\n  background-color: inherit;\r\n}\r\n\r\n.italics:placeholder-shown {\r\n  font-style: italic;\r\n  font-size: 20px;\r\n}\r\n\r\n.strike {\r\n  text-decoration: line-through;\r\n}\r\n\r\n/* clear */\r\n.clear {\r\n  padding: 1rem;\r\n  align-items: center;\r\n  text-align: center;\r\n  text-decoration: none;\r\n  background-color: #f4f4f4;\r\n}\r\n\r\n.clear a {\r\n  color: #666;\r\n  text-decoration: none;\r\n}\r\n\r\n.clear a:hover {\r\n  text-decoration: underline;\r\n}\r\n"],sourceRoot:""}]);const A=i},645:r=>{r.exports=function(r){var n=[];return n.toString=function(){return this.map((function(n){var e=r(n);return n[2]?"@media ".concat(n[2]," {").concat(e,"}"):e})).join("")},n.i=function(r,e,t){"string"==typeof r&&(r=[[null,r,""]]);var o={};if(t)for(var a=0;a<this.length;a++){var i=this[a][0];null!=i&&(o[i]=!0)}for(var A=0;A<r.length;A++){var c=[].concat(r[A]);t&&o[c[0]]||(e&&(c[2]?c[2]="".concat(e," and ").concat(c[2]):c[2]=e),n.push(c))}},n}},15:r=>{function n(r,n){(null==n||n>r.length)&&(n=r.length);for(var e=0,t=new Array(n);e<n;e++)t[e]=r[e];return t}r.exports=function(r){var e,t,o=(t=4,function(r){if(Array.isArray(r))return r}(e=r)||function(r,n){var e=null==r?null:"undefined"!=typeof Symbol&&r[Symbol.iterator]||r["@@iterator"];if(null!=e){var t,o,a=[],i=!0,A=!1;try{for(e=e.call(r);!(i=(t=e.next()).done)&&(a.push(t.value),!n||a.length!==n);i=!0);}catch(r){A=!0,o=r}finally{try{i||null==e.return||e.return()}finally{if(A)throw o}}return a}}(e,t)||function(r,e){if(r){if("string"==typeof r)return n(r,e);var t=Object.prototype.toString.call(r).slice(8,-1);return"Object"===t&&r.constructor&&(t=r.constructor.name),"Map"===t||"Set"===t?Array.from(r):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?n(r,e):void 0}}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),a=o[1],i=o[3];if(!i)return a;if("function"==typeof btoa){var A=btoa(unescape(encodeURIComponent(JSON.stringify(i)))),c="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(A),d="/*# ".concat(c," */"),l=i.sources.map((function(r){return"/*# sourceURL=".concat(i.sourceRoot||"").concat(r," */")}));return[a].concat(l).concat([d]).join("\n")}return[a].join("\n")}},379:r=>{var n=[];function e(r){for(var e=-1,t=0;t<n.length;t++)if(n[t].identifier===r){e=t;break}return e}function t(r,t){for(var a={},i=[],A=0;A<r.length;A++){var c=r[A],d=t.base?c[0]+t.base:c[0],l=a[d]||0,s="".concat(d," ").concat(l);a[d]=l+1;var u=e(s),p={css:c[1],media:c[2],sourceMap:c[3]};-1!==u?(n[u].references++,n[u].updater(p)):n.push({identifier:s,updater:o(p,t),references:1}),i.push(s)}return i}function o(r,n){var e=n.domAPI(n);return e.update(r),function(n){if(n){if(n.css===r.css&&n.media===r.media&&n.sourceMap===r.sourceMap)return;e.update(r=n)}else e.remove()}}r.exports=function(r,o){var a=t(r=r||[],o=o||{});return function(r){r=r||[];for(var i=0;i<a.length;i++){var A=e(a[i]);n[A].references--}for(var c=t(r,o),d=0;d<a.length;d++){var l=e(a[d]);0===n[l].references&&(n[l].updater(),n.splice(l,1))}a=c}}},569:r=>{var n={};r.exports=function(r,e){var t=function(r){if(void 0===n[r]){var e=document.querySelector(r);if(window.HTMLIFrameElement&&e instanceof window.HTMLIFrameElement)try{e=e.contentDocument.head}catch(r){e=null}n[r]=e}return n[r]}(r);if(!t)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");t.appendChild(e)}},216:r=>{r.exports=function(r){var n=document.createElement("style");return r.setAttributes(n,r.attributes),r.insert(n),n}},565:(r,n,e)=>{r.exports=function(r){var n=e.nc;n&&r.setAttribute("nonce",n)}},795:r=>{r.exports=function(r){var n=r.insertStyleElement(r);return{update:function(e){!function(r,n,e){var t=e.css,o=e.media,a=e.sourceMap;o?r.setAttribute("media",o):r.removeAttribute("media"),a&&"undefined"!=typeof btoa&&(t+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),n.styleTagTransform(t,r)}(n,r,e)},remove:function(){!function(r){if(null===r.parentNode)return!1;r.parentNode.removeChild(r)}(n)}}}},589:r=>{r.exports=function(r,n){if(n.styleSheet)n.styleSheet.cssText=r;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(r))}}}},n={};function e(t){var o=n[t];if(void 0!==o)return o.exports;var a=n[t]={id:t,exports:{}};return r[t](a,a.exports,e),a.exports}e.n=r=>{var n=r&&r.__esModule?()=>r.default:()=>r;return e.d(n,{a:n}),n},e.d=(r,n)=>{for(var t in n)e.o(n,t)&&!e.o(r,t)&&Object.defineProperty(r,t,{enumerable:!0,get:n[t]})},e.o=(r,n)=>Object.prototype.hasOwnProperty.call(r,n);var t={};(()=>{e.d(t,{Z:()=>x});var r=e(379),n=e.n(r),o=e(795),a=e.n(o),i=e(569),A=e.n(i),c=e(565),d=e.n(c),l=e(216),s=e.n(l),u=e(589),p=e.n(u),f=e(443),m={};m.styleTagTransform=p(),m.setAttributes=d(),m.insert=A().bind(null,"head"),m.domAPI=a(),m.insertStyleElement=s(),n()(f.Z,m),f.Z&&f.Z.locals&&f.Z.locals;const E=r=>{localStorage.setItem("todo-list",JSON.stringify(r))},h=r=>{const n=JSON.parse(localStorage.getItem("todo-list")),e=n.filter((e=>n.indexOf(e)!==r));for(let r=0;r<=e.length-1;r++)e[r].index=e.indexOf(e[r])+1;E(e)},g=document.querySelector(".container"),C=document.querySelector(".italics"),B=document.querySelector(".add"),b=document.querySelector(".clear-all"),v=()=>{for(;g.lastChild;)g.removeChild(g.lastChild);const r=JSON.parse(localStorage.getItem("todo-list"));if(null==r)return!1;for(let n=0;n<=r.length-1;n++){const e=document.createElement("div");e.id=r[n].index,e.classList.add("list");const t=document.createElement("input");t.type="checkbox",t.classList.add("check");const o=document.createElement("label");o.classList.add("label"),o.textContent=`${r[n].description}`,o.contentEditable=!0,r[n].completed&&(t.checked=!0,o.classList.add("strike"));const a=document.createElement("span");a.innerHTML="<i class='fas fa-trash-alt'></i>",a.style.cursor="pointer",a.id=r.indexOf(r[n]),e.appendChild(t),e.appendChild(o),e.appendChild(a),g.appendChild(e),o.addEventListener("focus",(()=>{o.classList.remove("strike")})),o.addEventListener("blur",(e=>{var t,o,a;t=e.target,o=r,a=r[n],o[a.index-1].description=t.textContent,E(o),x()})),t.addEventListener("change",(e=>{var t,a;t=e.target,a=r[n],t.checked?a.completed=!0:a.completed=!1,E(r),o.classList.toggle("strike")})),a.addEventListener("mousedown",(r=>{r.preventDefault(),h(parseInt(a.id)),v()}))}};B.addEventListener("click",(()=>{let r=JSON.parse(localStorage.getItem("todo-list"));var n,e;E((e=r,""===(n=C).value?n.focus():null!=e?e.push({description:n.value,completed:!1,index:e.length+1}):(e=[]).push({description:n.value,completed:!1,index:1}),e)),v()})),b.addEventListener("click",(()=>{(()=>{const r=JSON.parse(localStorage.getItem("todo-list")).filter((r=>!1===r.completed));let n=1;for(let e=0;e<=r.length-1;e++)r[e].index=n++;E(r),x()})()})),window.addEventListener("load",(()=>{if(null==JSON.parse(localStorage.getItem("todo-list")))return!1;v()}));const x=v})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,